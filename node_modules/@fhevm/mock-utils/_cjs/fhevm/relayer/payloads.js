"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertIsRelayerV1InputProofPayload = assertIsRelayerV1InputProofPayload;
exports.assertIsRelayerV1InputProofResponse = assertIsRelayerV1InputProofResponse;
exports.assertIsRelayerV1PublicDecryptPayload = assertIsRelayerV1PublicDecryptPayload;
exports.assertIsRelayerV1UserDecryptPayload = assertIsRelayerV1UserDecryptPayload;
exports.assertIsRelayerMetadata = assertIsRelayerMetadata;
const address_js_1 = require("../../utils/address.js");
const error_js_1 = require("../../utils/error.js");
const string_js_1 = require("../../utils/string.js");
function _assertIsRelayerV1UserDecryptValidity(value) {
    const stringFields = ["durationDays", "startTimestamp"];
    (0, string_js_1.assertIsStringProperty)(value, stringFields, "RelayerV1UserDecryptValidity");
}
function assertIsRelayerV1InputProofPayload(value) {
    const stringFields = [
        "contractAddress",
        "userAddress",
        "ciphertextWithInputVerification",
        "contractChainId",
    ];
    (0, string_js_1.assertIsStringProperty)(value, stringFields, "RelayerV1InputProofPayload");
}
function assertIsRelayerV1InputProofResponse(value) {
    const keys = ["handles", "signatures"];
    (0, string_js_1.assertIsStringArrayProperty)(value, keys, "RelayerV1InputProofResponse");
}
function assertIsRelayerV1PublicDecryptPayload(value) {
    const stringFields = ["ciphertext_handle"];
    (0, string_js_1.assertIsStringProperty)(value, stringFields, "RelayerV1PublicDecryptPayload");
}
function assertIsRelayerV1UserDecryptPayload(value) {
    const arrayKeys = ["handleContractPairs", "contractAddresses"];
    const stringKeys = [
        "contractsChainId",
        "publicKey",
        "signature",
        "userAddress",
    ];
    const objectKeys = ["requestValidity"];
    (0, string_js_1.assertIsStringProperty)(value, stringKeys, "RelayerV1UserDecryptPayload");
    (0, error_js_1.assertIsArrayProperty)(value, arrayKeys, "RelayerV1UserDecryptPayload");
    (0, error_js_1.assertIsObjectProperty)(value, objectKeys, "RelayerV1UserDecryptPayload");
    _assertIsRelayerV1UserDecryptValidity(value.requestValidity);
}
function assertIsRelayerMetadata(value) {
    const keys = [
        "ACLAddress",
        "FHEVMExecutorAddress",
        "InputVerifierAddress",
        "KMSVerifierAddress",
    ];
    (0, address_js_1.assertIsAddressProperty)(value, keys, "RelayerV1InputProofResponse");
}
//# sourceMappingURL=payloads.js.map