"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _FHEGasLimit_fheGasLimitContract, _FHEGasLimit_fheGasLimitContractAddress, _FHEGasLimit_fhemExecutorAddress, _FHEGasLimit_version;
Object.defineProperty(exports, "__esModule", { value: true });
exports.FHEGasLimit = void 0;
const ethers_1 = require("ethers");
const address_js_1 = require("../../utils/address.js");
const error_js_1 = require("../../utils/error.js");
const string_js_1 = require("../../utils/string.js");
const abiFHEGasLimit = [
    "function getVersion() external pure virtual returns (string memory)",
    "function getFHEVMExecutorAddress() public view virtual returns (address)",
];
class FHEGasLimit {
    constructor(runner, fheGasLimitContractAddress) {
        _FHEGasLimit_fheGasLimitContract.set(this, void 0);
        _FHEGasLimit_fheGasLimitContractAddress.set(this, void 0);
        _FHEGasLimit_fhemExecutorAddress.set(this, void 0);
        _FHEGasLimit_version.set(this, void 0);
        (0, address_js_1.assertIsAddress)(fheGasLimitContractAddress, "fheGasLimitContractAddress");
        __classPrivateFieldSet(this, _FHEGasLimit_fheGasLimitContractAddress, fheGasLimitContractAddress, "f");
        __classPrivateFieldSet(this, _FHEGasLimit_fheGasLimitContract, new ethers_1.ethers.Contract(fheGasLimitContractAddress, abiFHEGasLimit, runner), "f");
    }
    get runner() {
        (0, error_js_1.assertFhevm)(__classPrivateFieldGet(this, _FHEGasLimit_fheGasLimitContract, "f").runner);
        return __classPrivateFieldGet(this, _FHEGasLimit_fheGasLimitContract, "f").runner;
    }
    get address() {
        return __classPrivateFieldGet(this, _FHEGasLimit_fheGasLimitContractAddress, "f");
    }
    get version() {
        (0, error_js_1.assertFhevm)(__classPrivateFieldGet(this, _FHEGasLimit_version, "f") !== undefined, `FHEGasLimit wrapper is not yet initialized`);
        return __classPrivateFieldGet(this, _FHEGasLimit_version, "f");
    }
    get fhemExecutorAddress() {
        (0, error_js_1.assertFhevm)(__classPrivateFieldGet(this, _FHEGasLimit_fhemExecutorAddress, "f") !== undefined, `FHEGasLimit wrapper is not yet initialized`);
        return __classPrivateFieldGet(this, _FHEGasLimit_fhemExecutorAddress, "f");
    }
    static async create(runner, fheGasLimitContractAddress) {
        const fheGasLimit = new FHEGasLimit(runner, fheGasLimitContractAddress);
        await fheGasLimit.initialize();
        return fheGasLimit;
    }
    async initialize() {
        (0, error_js_1.assertFhevm)(__classPrivateFieldGet(this, _FHEGasLimit_fhemExecutorAddress, "f") === undefined, `FHEGasLimit wrapper already initialized`);
        __classPrivateFieldSet(this, _FHEGasLimit_fhemExecutorAddress, await __classPrivateFieldGet(this, _FHEGasLimit_fheGasLimitContract, "f").getFHEVMExecutorAddress(), "f");
        (0, address_js_1.assertIsAddress)(__classPrivateFieldGet(this, _FHEGasLimit_fhemExecutorAddress, "f"), "fhemExecutorAddress");
        __classPrivateFieldSet(this, _FHEGasLimit_version, await __classPrivateFieldGet(this, _FHEGasLimit_fheGasLimitContract, "f").getVersion(), "f");
        (0, string_js_1.assertIsString)(__classPrivateFieldGet(this, _FHEGasLimit_version, "f"), "version");
    }
}
exports.FHEGasLimit = FHEGasLimit;
_FHEGasLimit_fheGasLimitContract = new WeakMap(), _FHEGasLimit_fheGasLimitContractAddress = new WeakMap(), _FHEGasLimit_fhemExecutorAddress = new WeakMap(), _FHEGasLimit_version = new WeakMap();
//# sourceMappingURL=FHEGasLimit.js.map