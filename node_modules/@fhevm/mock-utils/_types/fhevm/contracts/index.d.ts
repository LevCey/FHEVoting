import { ethers as EthersT } from "ethers";
import { ACL } from "./ACL.js";
import { FHEGasLimit } from "./FHEGasLimit.js";
import { FHEVMExecutor } from "./FHEVMExecutor.js";
import { InputVerifier } from "./InputVerifier.js";
import { KMSVerifier } from "./KMSVerifier.js";
export type FhevmCoprocessorContractName = "ACL" | "FHEVMExecutor" | "InputVerifier" | "KMSVerifier" | "FHEGasLimit";
export type FhevmDecryptionOracleContractName = "DecryptionOracle";
export type FhevmContractName = FhevmCoprocessorContractName | FhevmDecryptionOracleContractName;
export { ACL, FHEGasLimit, FHEVMExecutor, InputVerifier, KMSVerifier };
export type FhevmContractsInfo = {
    kmsVerifier: KMSVerifier;
    acl: ACL;
    fhevmExecutor: FHEVMExecutor;
    inputVerifier: InputVerifier;
    fheGasLimit: FHEGasLimit;
};
export declare function initFhevmContractsInfo(runner: EthersT.ContractRunner, aclContractAddress: string, kmsVerifierContractAddress: string): Promise<FhevmContractsInfo>;
//# sourceMappingURL=index.d.ts.map