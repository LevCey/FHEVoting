"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateZamaOracleAddressDotSol = generateZamaOracleAddressDotSol;
const debug_1 = __importDefault(require("debug"));
const fs = __importStar(require("fs"));
const path = __importStar(require("path"));
const picocolors = __importStar(require("picocolors"));
const constants_1 = __importDefault(require("../../constants"));
const error_1 = require("../../error");
const error_2 = require("../error");
const debug = (0, debug_1.default)("@fhevm/hardhat:addresses");
function generateZamaOracleAddressDotSol(paths, sepoliaZamaOracleAddress) {
    const dstPath = paths.cacheZamaOracleAddressSol;
    if (fs.existsSync(dstPath)) {
        debug(`Skip ${picocolors.yellowBright("ZamaOracleAddress.sol")} generation. File ${dstPath} already exists.`);
        return dstPath;
    }
    const dstDir = path.dirname(dstPath);
    const origPath = path.join(paths.zamaFheOracleSolidityAddress, "ZamaOracleAddress.sol");
    if (!fs.existsSync(origPath)) {
        throw new error_1.HardhatFhevmError(`Unable to retrieve ${origPath}, make sure the package ${constants_1.default.ZAMA_FHE_ORACLE_SOLIDITY_PACKAGE_NAME} is properly installed'`);
    }
    const origContent = fs.readFileSync(origPath, "utf8");
    (0, error_2.assertHHFhevm)(origContent.indexOf("SepoliaZamaOracleAddress = 0x33347831500F1e73f0ccCBb95c9f86B94d7b1123;") >= 0);
    const dstContent = origContent.replaceAll("0x33347831500F1e73f0ccCBb95c9f86B94d7b1123", sepoliaZamaOracleAddress);
    if (!fs.existsSync(dstDir)) {
        fs.mkdirSync(dstDir, { recursive: true });
    }
    fs.writeFileSync(dstPath, dstContent, "utf8");
    debug(`Generate ${picocolors.yellowBright("ZamaOracleAddress.sol")} at ${dstPath}. Source ${origPath}`);
    return dstPath;
}
//# sourceMappingURL=ZamaOracleAddress.js.map