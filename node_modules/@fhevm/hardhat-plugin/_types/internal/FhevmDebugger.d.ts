import { FhevmHandleCoder, type FhevmTypeEbytes, type FhevmTypeEuint } from "@fhevm/mock-utils";
import type { BigNumberish } from "ethers";
import type { HardhatFhevmRuntimeDebugger } from "../types";
import type { FhevmEnvironment } from "./FhevmEnvironment";
export declare class FhevmDebugger implements HardhatFhevmRuntimeDebugger {
    #private;
    constructor(fhevmEnv: FhevmEnvironment);
    createDecryptionSignatures(handlesBytes32Hex: string[], clearTextValues: (bigint | string | boolean)[]): Promise<string[]>;
    createHandleCoder(): FhevmHandleCoder;
    decryptEbool(handleBytes32: BigNumberish): Promise<boolean>;
    decryptEuint(fhevmType: FhevmTypeEuint, handleBytes32: BigNumberish): Promise<bigint>;
    decryptEbytes(fhevmType: FhevmTypeEbytes, handleBytes32: BigNumberish): Promise<string>;
    decryptEaddress(handleBytes32: BigNumberish): Promise<string>;
}
//# sourceMappingURL=FhevmDebugger.d.ts.map