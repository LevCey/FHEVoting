/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { FHEVoting, FHEVotingInterface } from "../../contracts/FHEVoting";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getEncryptedNoCount",
    outputs: [
      {
        internalType: "ebool",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedYesCount",
    outputs: [
      {
        internalType: "ebool",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEbool",
        name: "voteEncrypted",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261007a60201b60201c565b61015060201b60201c565b61004961003e61016260201b60201c565b61017e60201b60201c565b610059600061019060201b60201c565b60018190555061006f600061019060201b60201c565b6002819055506105f5565b610082610454565b604051806080016040528073687820221192c5b662b25367f70076a37bc79b6c73ffffffffffffffffffffffffffffffffffffffff16815260200173848b0066793bcc60346da1f49049357399b8d59573ffffffffffffffffffffffffffffffffffffffff168152602001731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac73ffffffffffffffffffffffffffffffffffffffff16815260200173bc91f3dad1a5f19f8390c400196e58073b6a0bc473ffffffffffffffffffffffffffffffffffffffff16815250905090565b61015f816101bb60201b60201c565b50565b60007333347831500f1e73f0cccbb95c9f86b94d7b1123905090565b61018d816102ed60201b60201c565b50565b60006101b4826101a15760006101a4565b60015b60ff16600061034660201b60201c565b9050919050565b60006101cb61040460201b60201c565b905081600001518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081602001518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081604001518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606001518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006102fd61042c60201b60201c565b9050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008061035761040460201b60201c565b90508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639cd07acb85856040518363ffffffff1660e01b81526004016103b8929190610564565b6020604051808303816000875af11580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb91906105c8565b91505092915050565b60007fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600905090565b60007f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d00905090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000819050919050565b6104e7816104d4565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6054811061052d5761052c6104ed565b5b50565b600081905061053e8261051c565b919050565b600061054e82610530565b9050919050565b61055e81610543565b82525050565b600060408201905061057960008301856104de565b6105866020830184610555565b9392505050565b600080fd5b6000819050919050565b6105a581610592565b81146105b057600080fd5b50565b6000815190506105c28161059c565b92915050565b6000602082840312156105de576105dd61058d565b5b60006105ec848285016105b3565b91505092915050565b610d1e806106046000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309eef43e1461005157806338efa5cc14610081578063a57c26b21461009f578063fffeba4e146100bd575b600080fd5b61006b6004803603810190610066919061080f565b6100d9565b6040516100789190610857565b60405180910390f35b6100896100f9565b604051610096919061089d565b60405180910390f35b6100a7610103565b6040516100b4919061089d565b60405180910390f35b6100d760048036038101906100d29190610949565b61010d565b005b60006020528060005260406000206000915054906101000a900460ff1681565b6000600254905090565b6000600154905090565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610199576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019090610a06565b60405180910390fd5b60006101e98484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061028e565b905060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061024e600154826102a4565b600181905550610268600254610263836102ee565b6102a4565b60028190555061027a60015433610300565b5061028760025433610300565b5050505050565b600061029c83836000610315565b905092915050565b60006102af83610463565b6102c0576102bd6000610473565b92505b6102c982610463565b6102da576102d76000610473565b91505b6102e683836000610498565b905092915050565b60006102f982610570565b9050919050565b600061030c8383610625565b82905092915050565b6000806103206106c7565b90508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663196d0b9b863387876040518563ffffffff1660e01b81526004016103859493929190610b4b565b6020604051808303816000875af11580156103a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c89190610bc3565b91508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e395cec83336040518363ffffffff1660e01b8152600401610429929190610bf0565b600060405180830381600087803b15801561044357600080fd5b505af1158015610457573d6000803e3d6000fd5b50505050509392505050565b60008060001b8214159050919050565b600061049182610484576000610487565b60015b60ff1660006106ef565b9050919050565b60008082156104ad57600160f81b90506104b5565b600060f81b90505b60006104bf6106c7565b90508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166363a2db298787856040518463ffffffff1660e01b815260040161052293929190610c54565b6020604051808303816000875af1158015610541573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105659190610bc3565b925050509392505050565b60008061057b6106c7565b90508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f51ccfb0846040518263ffffffff1660e01b81526004016105da9190610c8b565b6020604051808303816000875af11580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d9190610bc3565b915050919050565b600061062f6106c7565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b9496b6284846040518363ffffffff1660e01b8152600401610690929190610bf0565b600060405180830381600087803b1580156106aa57600080fd5b505af11580156106be573d6000803e3d6000fd5b50505050505050565b60007fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600905090565b6000806106fa6106c7565b90508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639cd07acb85856040518363ffffffff1660e01b815260040161075b929190610cbf565b6020604051808303816000875af115801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e9190610bc3565b91505092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107dc826107b1565b9050919050565b6107ec816107d1565b81146107f757600080fd5b50565b600081359050610809816107e3565b92915050565b600060208284031215610825576108246107a7565b5b6000610833848285016107fa565b91505092915050565b60008115159050919050565b6108518161083c565b82525050565b600060208201905061086c6000830184610848565b92915050565b6000819050919050565b600061088782610872565b9050919050565b6108978161087c565b82525050565b60006020820190506108b2600083018461088e565b92915050565b6108c181610872565b81146108cc57600080fd5b50565b6000813590506108de816108b8565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610909576109086108e4565b5b8235905067ffffffffffffffff811115610926576109256108e9565b5b602083019150836001820283011115610942576109416108ee565b5b9250929050565b600080600060408486031215610962576109616107a7565b5b6000610970868287016108cf565b935050602084013567ffffffffffffffff811115610991576109906107ac565b5b61099d868287016108f3565b92509250509250925092565b600082825260208201905092915050565b7f596f75206861766520616c726561647920766f74656400000000000000000000600082015250565b60006109f06016836109a9565b91506109fb826109ba565b602082019050919050565b60006020820190508181036000830152610a1f816109e3565b9050919050565b610a2f81610872565b82525050565b610a3e816107d1565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a7e578082015181840152602081019050610a63565b60008484015250505050565b6000601f19601f8301169050919050565b6000610aa682610a44565b610ab08185610a4f565b9350610ac0818560208601610a60565b610ac981610a8a565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60548110610b1457610b13610ad4565b5b50565b6000819050610b2582610b03565b919050565b6000610b3582610b17565b9050919050565b610b4581610b2a565b82525050565b6000608082019050610b606000830187610a26565b610b6d6020830186610a35565b8181036040830152610b7f8185610a9b565b9050610b8e6060830184610b3c565b95945050505050565b610ba081610872565b8114610bab57600080fd5b50565b600081519050610bbd81610b97565b92915050565b600060208284031215610bd957610bd86107a7565b5b6000610be784828501610bae565b91505092915050565b6000604082019050610c056000830185610a26565b610c126020830184610a35565b9392505050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b610c4e81610c19565b82525050565b6000606082019050610c696000830186610a26565b610c766020830185610a26565b610c836040830184610c45565b949350505050565b6000602082019050610ca06000830184610a26565b92915050565b6000819050919050565b610cb981610ca6565b82525050565b6000604082019050610cd46000830185610cb0565b610ce16020830184610b3c565b939250505056fea2646970667358221220eed3149fb6eb22210f0037c05a82d835fcd63ec66236f2814e24a307f6c2b35164736f6c634300081c0033";

type FHEVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FHEVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FHEVoting__factory extends ContractFactory {
  constructor(...args: FHEVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FHEVoting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FHEVoting__factory {
    return super.connect(runner) as FHEVoting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FHEVotingInterface {
    return new Interface(_abi) as FHEVotingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FHEVoting {
    return new Contract(address, _abi, runner) as unknown as FHEVoting;
  }
}
